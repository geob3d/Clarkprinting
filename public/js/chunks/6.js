(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[6],{

/***/ "./node_modules/vue-free-transform/dist/FreeTransform.common.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vue-free-transform/dist/FreeTransform.common.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"0d58\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(\"ce10\");\nvar enumBugKeys = __webpack_require__(\"e11e\");\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n\n/***/ \"11e9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pIE = __webpack_require__(\"52a7\");\nvar createDesc = __webpack_require__(\"4630\");\nvar toIObject = __webpack_require__(\"6821\");\nvar toPrimitive = __webpack_require__(\"6a99\");\nvar has = __webpack_require__(\"69a8\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"c69a\");\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(\"9e1e\") ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n/***/ }),\n\n/***/ \"1495\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(\"86cc\");\nvar anObject = __webpack_require__(\"cb7c\");\nvar getKeys = __webpack_require__(\"0d58\");\n\nmodule.exports = __webpack_require__(\"9e1e\") ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/***/ }),\n\n/***/ \"230e\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"d3f4\");\nvar document = __webpack_require__(\"7726\").document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n\n/***/ \"2540\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (_ref, onUpdate) {\n  var x = _ref.x,\n      y = _ref.y,\n      startX = _ref.startX,\n      startY = _ref.startY;\n  return function (dragEvent) {\n\n    x += dragEvent.pageX - startX;\n    y += dragEvent.pageY - startY;\n\n    onUpdate({ x: x, y: y });\n\n    startX = dragEvent.pageX;\n    startY = dragEvent.pageY;\n  };\n};\n\n/***/ }),\n\n/***/ \"255b\":\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(r,n){ true?module.exports=n():undefined}(window,function(){return function(r){var n={};function t(e){if(n[e])return n[e].exports;var o=n[e]={i:e,l:!1,exports:{}};return r[e].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=r,t.c=n,t.d=function(r,n,e){t.o(r,n)||Object.defineProperty(r,n,{enumerable:!0,get:e})},t.r=function(r){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(r,\"__esModule\",{value:!0})},t.t=function(r,n){if(1&n&&(r=t(r)),8&n)return r;if(4&n&&\"object\"==typeof r&&r&&r.__esModule)return r;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,\"default\",{enumerable:!0,value:r}),2&n&&\"string\"!=typeof r)for(var o in r)t.d(e,o,function(n){return r[n]}.bind(null,o));return e},t.n=function(r){var n=r&&r.__esModule?function(){return r.default}:function(){return r};return t.d(n,\"a\",n),n},t.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},t.p=\"\",t(t.s=0)}([function(r,n,t){\"use strict\";function e(r,n){return Array.isArray(n)?[r.a*n[0]+r.c*n[1]+r.e,r.b*n[0]+r.d*n[1]+r.f]:{x:r.a*n.x+r.c*n.y+r.e,y:r.b*n.x+r.d*n.y+r.f}}function o(r,n){return n.map(function(n){return e(r,n)})}function u(r){return{a:parseFloat(r.a),b:parseFloat(r.b),c:parseFloat(r.c),d:parseFloat(r.d),e:parseFloat(r.e),f:parseFloat(r.f)}}t.r(n);var a=/^matrix\\(\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*,\\s*([0-9_+-.e]+)\\s*\\)$/i;function i(r){var n=r.match(a);if(null===n||n.length<7)throw new Error(\"'\"+r+\"' is not a matrix\");return{a:parseFloat(n[1]),b:parseFloat(n[2]),c:parseFloat(n[3]),d:parseFloat(n[4]),e:parseFloat(n[5]),f:parseFloat(n[6])}}function f(){return{a:1,c:0,e:0,b:0,d:1,f:0}}function c(r){var n=r.a,t=r.b,e=r.c,o=r.d,u=r.e,a=r.f,i=n*o-t*e;return{a:o/i,b:t/-i,c:e/-i,d:n/i,e:(o*u-e*a)/-i,f:(t*u-n*a)/i}}var d=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},s=function(r){return\"number\"==typeof r&&!isNaN(r)&&isFinite(r)},l=function(r){return null!=r&&\"object\"===(void 0===r?\"undefined\":d(r))};function p(r){return l(r)&&r.hasOwnProperty(\"a\")&&s(r.a)&&r.hasOwnProperty(\"b\")&&s(r.b)&&r.hasOwnProperty(\"c\")&&s(r.c)&&r.hasOwnProperty(\"d\")&&s(r.d)&&r.hasOwnProperty(\"e\")&&s(r.e)&&r.hasOwnProperty(\"f\")&&s(r.f)}function y(r){return void 0===r}function b(r){return{a:1,c:0,e:r,b:0,d:1,f:arguments.length>1&&void 0!==arguments[1]?arguments[1]:0}}function v(){for(var r=arguments.length,n=Array(r),t=0;t<r;t++)n[t]=arguments[t];var e=function(r,n){return{a:r.a*n.a+r.c*n.b,c:r.a*n.c+r.c*n.d,e:r.a*n.e+r.c*n.f+r.e,b:r.b*n.a+r.d*n.b,d:r.b*n.c+r.d*n.d,f:r.b*n.e+r.d*n.f+r.f}};switch((n=Array.isArray(n[0])?n[0]:n).length){case 0:throw new Error(\"no matrices provided\");case 1:return n[0];case 2:return e(n[0],n[1]);default:var o=function(r){return Array.isArray(r)?r:Array.from(r)}(n),u=o[0],a=o[1],i=o.slice(2),f=e(u,a);return v.apply(void 0,[f].concat(function(r){if(Array.isArray(r)){for(var n=0,t=Array(r.length);n<r.length;n++)t[n]=r[n];return t}return Array.from(r)}(i)))}}function m(){return v.apply(void 0,arguments)}var h=Math.cos,x=Math.sin,g=Math.PI;function w(r,n,t){var e=h(r),o=x(r),u={a:e,c:-o,e:0,b:o,d:e,f:0};return y(n)||y(t)?u:v([b(n,t),u,b(-n,-t)])}function P(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return w(r*g/180,n,t)}function S(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;return y(n)&&(n=r),{a:r,c:0,e:0,b:0,d:n,f:0}}function O(r,n){return{a:1,c:r,e:0,b:n,d:1,f:0}}var A=Math.tan;function F(r,n){return{a:1,c:A(r),e:0,b:A(n),d:1,f:0}}function M(r,n){return F(r*Math.PI/180,n*Math.PI/180)}function j(r){return T(r)}function _(r){return T(r)}function T(r){return\"matrix(\"+r.a+\",\"+r.b+\",\"+r.c+\",\"+r.d+\",\"+r.e+\",\"+r.f+\")\"}t.d(n,\"applyToPoint\",function(){return e}),t.d(n,\"applyToPoints\",function(){return o}),t.d(n,\"fromObject\",function(){return u}),t.d(n,\"fromString\",function(){return i}),t.d(n,\"identity\",function(){return f}),t.d(n,\"inverse\",function(){return c}),t.d(n,\"isAffineMatrix\",function(){return p}),t.d(n,\"rotate\",function(){return w}),t.d(n,\"rotateDEG\",function(){return P}),t.d(n,\"scale\",function(){return S}),t.d(n,\"shear\",function(){return O}),t.d(n,\"skew\",function(){return F}),t.d(n,\"skewDEG\",function(){return M}),t.d(n,\"toCSS\",function(){return j}),t.d(n,\"toSVG\",function(){return _}),t.d(n,\"toString\",function(){return T}),t.d(n,\"transform\",function(){return v}),t.d(n,\"compose\",function(){return m}),t.d(n,\"translate\",function(){return b})}])});\n//# sourceMappingURL=transformation-matrix.min.js.map\n\n/***/ }),\n\n/***/ \"2aba\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(\"7726\");\nvar hide = __webpack_require__(\"32e9\");\nvar has = __webpack_require__(\"69a8\");\nvar SRC = __webpack_require__(\"ca5a\")('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n__webpack_require__(\"8378\").inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n\n/***/ }),\n\n/***/ \"2aeb\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(\"cb7c\");\nvar dPs = __webpack_require__(\"1495\");\nvar enumBugKeys = __webpack_require__(\"e11e\");\nvar IE_PROTO = __webpack_require__(\"613b\")('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(\"230e\")('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(\"fab2\").appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n\n/***/ \"2d00\":\n/***/ (function(module, exports) {\n\nmodule.exports = false;\n\n\n/***/ }),\n\n/***/ \"2d95\":\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n\n/***/ \"32e9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(\"86cc\");\nvar createDesc = __webpack_require__(\"4630\");\nmodule.exports = __webpack_require__(\"9e1e\") ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n\n/***/ \"4588\":\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n\n/***/ \"4630\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n\n/***/ \"52a7\":\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n\n/***/ \"5537\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = __webpack_require__(\"8378\");\nvar global = __webpack_require__(\"7726\");\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(\"2d00\") ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n\n\n/***/ }),\n\n/***/ \"5ca1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(\"7726\");\nvar core = __webpack_require__(\"8378\");\nvar hide = __webpack_require__(\"32e9\");\nvar redefine = __webpack_require__(\"2aba\");\nvar ctx = __webpack_require__(\"9b43\");\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n\n/***/ \"5dbc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"d3f4\");\nvar setPrototypeOf = __webpack_require__(\"8b97\").set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n\n\n/***/ }),\n\n/***/ \"613b\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(\"5537\")('keys');\nvar uid = __webpack_require__(\"ca5a\");\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n\n/***/ \"626a\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(\"2d95\");\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n\n/***/ \"6821\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(\"626a\");\nvar defined = __webpack_require__(\"be13\");\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n\n/***/ \"69a8\":\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n\n/***/ \"6a99\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(\"d3f4\");\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n\n/***/ \"7726\":\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n\n/***/ \"77f1\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(\"4588\");\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n\n/***/ \"79e5\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n\n/***/ \"8378\":\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n\n/***/ \"8675\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _pointFinder = __webpack_require__(\"959e\");\n\n/**\n * Perform Scaling based on a positioned handle\n *\n * @param {string} scaleType scale point position name\n * @param {Object} payload an object holding element information\n * @param {number} payload.startX mouse down position on X axis\n * @param {number} payload.startY mouse down position on Y axis\n * @param {number} payload.x position of x\n * @param {number} payload.y position of y\n * @param {number} payload.scaleX amount of scale for x (width)\n * @param {number} payload.scaleY amount of scale for y (height)\n * @param {number} payload.width original width\n * @param {number} payload.height original height\n * @param {number} payload.angle the angle of rotation\n * @param {number} payload.scaleLimit minimum scale limit\n * @param {boolean} payload.scaleFromCenter is scale from center\n * @param {boolean} payload.aspectRatio is scale on aspect ration\n * @param {Function} onUpdate a callback on mouse up\n *\n * @returns {Function} a function for mouse move\n */\nexports.default = function (scaleType, _ref, onUpdate) {\n  var startX = _ref.startX,\n      startY = _ref.startY,\n      x = _ref.x,\n      y = _ref.y,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      width = _ref.width,\n      height = _ref.height,\n      angle = _ref.angle,\n      scaleLimit = _ref.scaleLimit,\n      _ref$scaleFromCenter = _ref.scaleFromCenter,\n      scaleFromCenter = _ref$scaleFromCenter === undefined ? false : _ref$scaleFromCenter,\n      _ref$enableScaleFromC = _ref.enableScaleFromCenter,\n      enableScaleFromCenter = _ref$enableScaleFromC === undefined ? true : _ref$enableScaleFromC,\n      _ref$aspectRatio = _ref.aspectRatio,\n      aspectRatio = _ref$aspectRatio === undefined ? false : _ref$aspectRatio,\n      _ref$enableAspectRati = _ref.enableAspectRatio,\n      enableAspectRatio = _ref$enableAspectRati === undefined ? true : _ref$enableAspectRati;\n\n\n  var ratio = width * scaleX / (height * scaleY);\n\n  var point = (0, _pointFinder.getPoint)(scaleType, { x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height, angle: angle, scaleFromCenter: scaleFromCenter });\n\n  var oppositePoint = (0, _pointFinder.getOppositePoint)(scaleType, {\n    x: x,\n    y: y,\n    scaleX: scaleX,\n    scaleY: scaleY,\n    width: width,\n    height: height,\n    angle: angle\n  });\n\n  var currentProps = {\n    x: x,\n    y: y,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n\n  return function (event) {\n\n    if (enableScaleFromCenter && (event.altKey && !scaleFromCenter || !event.altKey && scaleFromCenter)) {\n\n      startX = event.pageX;\n      startY = event.pageY;\n\n      scaleFromCenter = event.altKey && !scaleFromCenter;\n\n      point = (0, _pointFinder.getPoint)(scaleType, _extends({}, currentProps, {\n        width: width,\n        height: height,\n        angle: angle,\n        scaleFromCenter: scaleFromCenter\n      }));\n\n      oppositePoint = (0, _pointFinder.getOppositePoint)(scaleType, _extends({}, currentProps, {\n        width: width,\n        height: height,\n        angle: angle\n      }));\n    }\n\n    if (!event.shiftKey && aspectRatio) {\n      aspectRatio = false;\n    } else if (event.shiftKey && !aspectRatio) {\n      aspectRatio = true;\n    }\n\n    if (!enableAspectRatio) {\n      aspectRatio = false;\n    }\n    var moveDiff = {\n      x: event.pageX - startX,\n      y: event.pageY - startY\n    };\n\n    var movePoint = (0, _pointFinder.getMovePoint)(scaleType, oppositePoint, point, moveDiff);\n\n    if (enableScaleFromCenter && scaleFromCenter) {\n      movePoint.x *= 2;\n      movePoint.y *= 2;\n    }\n\n    var _getSineCosine = (0, _pointFinder.getSineCosine)(scaleType, angle),\n        sin = _getSineCosine.sin,\n        cos = _getSineCosine.cos;\n\n    var rotationPoint = {\n      x: movePoint.x * cos + movePoint.y * sin,\n      y: movePoint.y * cos - movePoint.x * sin\n    };\n\n    currentProps.scaleX = rotationPoint.x / width > scaleLimit ? rotationPoint.x / width : scaleLimit;\n    currentProps.scaleY = rotationPoint.y / height > scaleLimit ? rotationPoint.y / height : scaleLimit;\n\n    switch (scaleType) {\n      case 'ml':\n      case 'mr':\n        currentProps.scaleY = scaleY;\n        if (aspectRatio) {\n          currentProps.scaleY = width * currentProps.scaleX * (1 / ratio) / height;\n        }\n        break;\n      case 'tm':\n      case 'bm':\n        currentProps.scaleX = scaleX;\n        if (aspectRatio) {\n          currentProps.scaleX = height * currentProps.scaleY * ratio / width;\n        }\n        break;\n      default:\n        if (aspectRatio) {\n          currentProps.scaleY = width * currentProps.scaleX * (1 / ratio) / height;\n        }\n    }\n\n    if (enableScaleFromCenter && scaleFromCenter) {\n      var center = (0, _pointFinder.getCenter)({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        scaleX: currentProps.scaleX,\n        scaleY: currentProps.scaleY\n      });\n      currentProps.x = x + (point.x - center.x);\n      currentProps.y = y + (point.y - center.y);\n    } else {\n      var freshOppositePoint = (0, _pointFinder.getOppositePoint)(scaleType, {\n        width: width,\n        height: height,\n        angle: angle,\n        x: x,\n        y: y,\n        scaleX: currentProps.scaleX,\n        scaleY: currentProps.scaleY\n      });\n\n      currentProps.x = x + (oppositePoint.x - freshOppositePoint.x);\n      currentProps.y = y + (oppositePoint.y - freshOppositePoint.y);\n    }\n\n    onUpdate(currentProps);\n  };\n};\n\n/***/ }),\n\n/***/ \"86cc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(\"cb7c\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"c69a\");\nvar toPrimitive = __webpack_require__(\"6a99\");\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(\"9e1e\") ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n\n/***/ \"89e1\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _transformationMatrix = __webpack_require__(\"255b\");\n\n//https://stackoverflow.com/questions/15762768/javascript-math-round-to-two-decimal-places\nvar roundTo = function roundTo(n) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  var multiplicator = Math.pow(10, digits);\n  n = parseFloat((n * multiplicator).toFixed(11));\n  var test = Math.round(n) / multiplicator;\n  return +test.toFixed(2);\n};\n\nexports.default = function (_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      angle = _ref.angle,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      width = _ref.width,\n      height = _ref.height,\n      _ref$disableScale = _ref.disableScale,\n      disableScale = _ref$disableScale === undefined ? false : _ref$disableScale;\n\n\n  var changedWidth = width * (1 - scaleX);\n  var newWidth = width - changedWidth;\n  var changedHeight = height * (1 - scaleY);\n  var newHeight = height - changedHeight;\n\n  var transformMatrix = void 0;\n\n  if (disableScale === false) {\n    transformMatrix = (0, _transformationMatrix.transform)((0, _transformationMatrix.translate)(roundTo(x + changedWidth / 2), roundTo(y + changedHeight / 2)), (0, _transformationMatrix.rotate)(angle * (Math.PI / 180)), (0, _transformationMatrix.scale)(scaleX, scaleY));\n  } else {\n    transformMatrix = (0, _transformationMatrix.transform)((0, _transformationMatrix.translate)(roundTo(x + changedWidth), roundTo(y + changedHeight)), (0, _transformationMatrix.rotate)(angle * (Math.PI / 180)));\n    width = newWidth;\n    height = newHeight;\n  }\n\n  return {\n    element: {\n      width: width,\n      height: height,\n      transform: (0, _transformationMatrix.toCSS)(transformMatrix),\n      position: \"absolute\"\n    },\n    controls: {\n      width: newWidth,\n      height: newHeight,\n      transform: (0, _transformationMatrix.toCSS)((0, _transformationMatrix.transform)((0, _transformationMatrix.translate)(roundTo(x + changedWidth), roundTo(y + changedHeight)), (0, _transformationMatrix.rotate)(angle * (Math.PI / 180)))),\n      position: \"absolute\"\n    }\n  };\n};\n\n/***/ }),\n\n/***/ \"8b97\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(\"d3f4\");\nvar anObject = __webpack_require__(\"cb7c\");\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = __webpack_require__(\"9b43\")(Function.call, __webpack_require__(\"11e9\").f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n/***/ }),\n\n/***/ \"9093\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"ce10\");\nvar hiddenKeys = __webpack_require__(\"e11e\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ }),\n\n/***/ \"927f\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _pointFinder = __webpack_require__(\"959e\");\n\nexports.default = function (_ref, onUpdate) {\n  var x = _ref.x,\n      y = _ref.y,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      width = _ref.width,\n      height = _ref.height,\n      angle = _ref.angle,\n      startX = _ref.startX,\n      startY = _ref.startY,\n      offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY;\n\n\n  var center = (0, _pointFinder.getCenter)({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height });\n\n  var pressAngle = Math.atan2(startY - offsetY - center.y, startX - offsetX - center.x) * 180 / Math.PI;\n\n  return function (event) {\n\n    var degree = Math.atan2(event.pageY - offsetY - center.y, event.pageX - offsetX - center.x) * 180 / Math.PI;\n\n    var ang = angle + degree - pressAngle;\n\n    if (event.shiftKey) {\n      ang = (ang / 15 >> 0) * 15;\n    }\n\n    onUpdate({\n      angle: ang\n    });\n  };\n};\n\n/***/ }),\n\n/***/ \"959e\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Find the actual point position of a transformed point\n *\n * @param {Object} payload an object holding required information to find actual point\n * @param {number} payload.x position of x\n * @param {number} payload.y position of y\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center  {{x,y}} the center of element\n * @param {number} payload.rad the a computed radians of a provided angle\n *\n * @returns {{x: number, y: number}} an object holding the position\n */\nvar findPoint = function findPoint(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      angle = _ref.angle,\n      center = _ref.center,\n      _ref$rad = _ref.rad,\n      rad = _ref$rad === undefined ? angle * (Math.PI / 180) : _ref$rad;\n  return {\n    x: (x - center.x) * Math.cos(rad) - (y - center.y) * Math.sin(rad) + center.x,\n    y: (x - center.x) * Math.sin(rad) + (y - center.y) * Math.cos(rad) + center.y\n  };\n};\n\n/**\n * Get the Center point of a box\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n *\n * @returns {{x: *, y: *}} the center of point of element\n */\nvar getCenter = exports.getCenter = function getCenter(_ref2) {\n  var x = _ref2.x,\n      y = _ref2.y,\n      scaleX = _ref2.scaleX,\n      scaleY = _ref2.scaleY,\n      width = _ref2.width,\n      height = _ref2.height;\n\n  var changedWidth = width * scaleX;\n  var changedHeight = height * scaleY;\n\n  var changedWidthDiff = changedWidth - width;\n  var changedHeightDiff = changedHeight - height;\n\n  return {\n    x: x - changedWidthDiff + changedWidth / 2,\n    y: y - changedHeightDiff + changedHeight / 2\n  };\n};\n\n/**\n * get the TopLeft point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getTL = exports.getTL = function getTL(_ref3) {\n  var x = _ref3.x,\n      y = _ref3.y,\n      scaleX = _ref3.scaleX,\n      scaleY = _ref3.scaleY,\n      width = _ref3.width,\n      height = _ref3.height,\n      angle = _ref3.angle,\n      _ref3$center = _ref3.center,\n      center = _ref3$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref3$center;\n  return findPoint({\n    x: x,\n    y: y,\n    angle: angle,\n    center: center\n  });\n};\n\n/**\n * get the LeftBottom point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getBL = exports.getBL = function getBL(_ref4) {\n  var x = _ref4.x,\n      y = _ref4.y,\n      scaleX = _ref4.scaleX,\n      scaleY = _ref4.scaleY,\n      width = _ref4.width,\n      height = _ref4.height,\n      angle = _ref4.angle,\n      _ref4$center = _ref4.center,\n      center = _ref4$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref4$center;\n\n\n  return findPoint({\n    angle: angle,\n    center: center,\n    x: x,\n    y: y + height * scaleY\n  });\n};\n\n/**\n * Get TopRight point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getTR = exports.getTR = function getTR(_ref5) {\n  var x = _ref5.x,\n      y = _ref5.y,\n      scaleX = _ref5.scaleX,\n      scaleY = _ref5.scaleY,\n      width = _ref5.width,\n      height = _ref5.height,\n      angle = _ref5.angle,\n      _ref5$center = _ref5.center,\n      center = _ref5$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref5$center;\n  return findPoint({\n    angle: angle,\n    center: center,\n    x: x + width * scaleX,\n    y: y\n  });\n};\n\n/**\n * Get BottomRight point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getBR = exports.getBR = function getBR(_ref6) {\n  var x = _ref6.x,\n      y = _ref6.y,\n      scaleX = _ref6.scaleX,\n      scaleY = _ref6.scaleY,\n      width = _ref6.width,\n      height = _ref6.height,\n      angle = _ref6.angle,\n      _ref6$center = _ref6.center,\n      center = _ref6$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref6$center;\n\n  return findPoint({\n    angle: angle,\n    center: center,\n    x: x + width * scaleX,\n    y: y + height * scaleY\n  });\n};\n\n/**\n * get MiddleRight point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getMR = exports.getMR = function getMR(_ref7) {\n  var x = _ref7.x,\n      y = _ref7.y,\n      scaleX = _ref7.scaleX,\n      scaleY = _ref7.scaleY,\n      width = _ref7.width,\n      height = _ref7.height,\n      angle = _ref7.angle,\n      _ref7$center = _ref7.center,\n      center = _ref7$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref7$center;\n  return findPoint({\n    x: x + width * scaleX,\n    y: y + height * scaleY / 2,\n    center: center,\n    angle: angle\n  });\n};\n\n/**\n * get MiddleBottom point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getBM = exports.getBM = function getBM(_ref8) {\n  var x = _ref8.x,\n      y = _ref8.y,\n      scaleX = _ref8.scaleX,\n      scaleY = _ref8.scaleY,\n      width = _ref8.width,\n      height = _ref8.height,\n      angle = _ref8.angle,\n      _ref8$center = _ref8.center,\n      center = _ref8$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref8$center;\n  return findPoint({\n    x: x + width * scaleX / 2,\n    y: y + height * scaleY,\n    center: center,\n    angle: angle\n  });\n};\n\n/**\n * get MiddleTop point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getTM = exports.getTM = function getTM(_ref9) {\n  var x = _ref9.x,\n      y = _ref9.y,\n      scaleX = _ref9.scaleX,\n      scaleY = _ref9.scaleY,\n      width = _ref9.width,\n      height = _ref9.height,\n      angle = _ref9.angle,\n      _ref9$center = _ref9.center,\n      center = _ref9$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref9$center;\n  return findPoint({\n    x: x + width * scaleX / 2,\n    y: y,\n    center: center,\n    angle: angle\n  });\n};\n\n/**\n * get MiddleLeft point position\n *\n * @param {Object} payload element information\n * @param {number} payload.x the position of x\n * @param {number} payload.y the position of y\n * @param {number} payload.scaleX the scaleX of element\n * @param {number} payload.scaleY the scaleY of element\n * @param {number} payload.width the original width of element\n * @param {number} payload.height the original height of element\n * @param {number} payload.angle the  rotation angle\n * @param {Object} payload.center {{x:number, y:number}}\n *\n * @returns {{x: number, y: number}} the position\n */\nvar getML = exports.getML = function getML(_ref10) {\n  var x = _ref10.x,\n      y = _ref10.y,\n      scaleX = _ref10.scaleX,\n      scaleY = _ref10.scaleY,\n      width = _ref10.width,\n      height = _ref10.height,\n      angle = _ref10.angle,\n      _ref10$center = _ref10.center,\n      center = _ref10$center === undefined ? getCenter({ x: x, y: y, scaleX: scaleX, scaleY: scaleY, width: width, height: height }) : _ref10$center;\n  return findPoint({\n    x: x,\n    y: y + height * scaleY / 2,\n    center: center,\n    angle: angle\n  });\n};\n\n/**\n * given a point, get it's opposite point\n *\n * @param {string} scaleType scale point position name\n * @param {Object} props element information\n * @param {number} props.x the position of x\n * @param {number} props.y the position of y\n * @param {number} props.scaleX the scaleX of element\n * @param {number} props.scaleY the scaleY of element\n * @param {number} props.width the original width of element\n * @param {number} props.height the original height of element\n * @param {number} props.angle the  rotation angle\n * @param {Object} props.center {{x:number, y:number}}\n *\n * @returns {{x:number, y:number}} point position\n */\nvar getOppositePoint = exports.getOppositePoint = function getOppositePoint(scaleType, props) {\n\n  var caller = void 0;\n\n  var center = getCenter({\n    x: props.x,\n    y: props.y,\n    width: props.width,\n    height: props.height,\n    scaleX: props.scaleX,\n    scaleY: props.scaleY\n  });\n\n  props = _extends({\n    center: center\n  }, props, {\n    x: getOriginalPositionFromScale(props.x, props.width, props.scaleX),\n    y: getOriginalPositionFromScale(props.y, props.height, props.scaleY)\n  });\n\n  switch (scaleType) {\n    case 'tl':\n      caller = getBR;\n      break;\n\n    case 'ml':\n      caller = getMR;\n      break;\n\n    case 'tr':\n      caller = getBL;\n      break;\n\n    case 'tm':\n      caller = getBM;\n      break;\n\n    case 'bl':\n      caller = getTR;\n      break;\n\n    case 'bm':\n      caller = getTM;\n      break;\n\n    case 'br':\n      caller = getTL;\n      break;\n\n    case 'mr':\n      caller = getML;\n      break;\n  }\n  return caller(props);\n};\n\n/**\n * given a point position by it's string name\n *\n * @param {string} scaleType scale point position name\n * @param {Object} props element information\n * @param {number} props.x the position of x\n * @param {number} props.y the position of y\n * @param {number} props.scaleX the scaleX of element\n * @param {number} props.scaleY the scaleY of element\n * @param {number} props.width the original width of element\n * @param {number} props.height the original height of element\n * @param {number} props.angle the  rotation angle\n * @param {boolean} props.scaleFromCenter scaling performed from center\n * @param {Object} props.center {{x:number, y:number}}\n *\n * @returns {{x:number, y:number}} point position\n */\nvar getPoint = exports.getPoint = function getPoint(scaleType, props) {\n\n  var center = getCenter({\n    x: props.x,\n    y: props.y,\n    width: props.width,\n    height: props.height,\n    scaleX: props.scaleX,\n    scaleY: props.scaleY\n  });\n\n  if (props.scaleFromCenter) {\n    return center;\n  }\n\n  props = _extends({\n    center: center\n  }, props, {\n    x: getOriginalPositionFromScale(props.x, props.width, props.scaleX),\n    y: getOriginalPositionFromScale(props.y, props.height, props.scaleY)\n  });\n\n  var caller = void 0;\n  switch (scaleType) {\n\n    case 'tl':\n      caller = getTL;\n      break;\n\n    case 'ml':\n      caller = getML;\n      break;\n\n    case 'tr':\n      caller = getTR;\n      break;\n\n    case 'tm':\n      caller = getTM;\n      break;\n\n    case 'bl':\n      caller = getBL;\n      break;\n\n    case 'bm':\n      caller = getBM;\n      break;\n\n    case 'br':\n      caller = getBR;\n      break;\n\n    case 'mr':\n      caller = getMR;\n      break;\n  }\n\n  return caller(props);\n};\n\n/**\n * get sine and cosine for a point based on angle and point name\n *\n * @param {string} scaleType scale point position name\n * @param {number} angle the  rotation angle\n *\n * @returns {{sin: number, cos: number}} the sine and cosine of scale type\n */\nvar getSineCosine = exports.getSineCosine = function getSineCosine(scaleType, angle) {\n  switch (scaleType) {\n    case 'tr':\n    case 'tm':\n    case 'bl':\n    case 'bm':\n      return {\n        cos: Math.cos(-angle * (Math.PI / 180)),\n        sin: Math.sin(-angle * (Math.PI / 180))\n      };\n    default:\n      return {\n        sin: Math.sin(angle * (Math.PI / 180)),\n        cos: Math.cos(angle * (Math.PI / 180))\n      };\n  }\n};\n\n/**\n * get the amount of movement for a point\n *\n * @param {string} scaleType scale point position name\n * @param {object} oppositePoint the opposite point position {x: number,y: number}\n * @param {object} point the point position {x: number,y: number}\n * @param {object} moveDiff the the amount of pixels that element moved {x: number,y: number}\n *\n * @returns {{x: number, y:number}} the new position of moved element\n */\nvar getMovePoint = exports.getMovePoint = function getMovePoint(scaleType, oppositePoint, point, moveDiff) {\n  switch (scaleType) {\n\n    case 'tl':\n      return {\n        x: oppositePoint.x - (moveDiff.x + point.x),\n        y: oppositePoint.y - (moveDiff.y + point.y)\n      };\n    case 'ml':\n      return {\n        x: oppositePoint.x - moveDiff.x - point.x,\n        y: oppositePoint.y - moveDiff.y - point.y\n      };\n\n    case 'tr':\n    case 'tm':\n      return {\n        x: point.x + (moveDiff.x - oppositePoint.x),\n        y: oppositePoint.y - (moveDiff.y + point.y)\n      };\n    case 'mr':\n    case 'br':\n      return {\n        x: point.x + (moveDiff.x - oppositePoint.x),\n        y: point.y + (moveDiff.y - oppositePoint.y)\n      };\n    case 'bl':\n    case 'bm':\n      return {\n        x: oppositePoint.x - (moveDiff.x + point.x),\n        y: point.y + (moveDiff.y - oppositePoint.y)\n      };\n  }\n};\n\n/**\n * guess the original point position based on scale and the position after scaling\n *\n * @param {number} position the position of x or y\n * @param {number} size the size of element (width for x, height for y)\n * @param {number} scale the amount of scaled element (scaleX for x, scaleY for y)\n *\n * @returns {number} the original point position\n */\nvar getOriginalPositionFromScale = function getOriginalPositionFromScale(position, size, scale) {\n  var changed = size * scale;\n\n  var diff = changed - size;\n\n  return position - diff;\n};\n\n/***/ }),\n\n/***/ \"9b43\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(\"d8e8\");\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n\n/***/ \"9cdd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styler = exports.translate = exports.rotate = exports.scale = undefined;\n\nvar _scale = __webpack_require__(\"8675\");\n\nvar _scale2 = _interopRequireDefault(_scale);\n\nvar _rotate = __webpack_require__(\"927f\");\n\nvar _rotate2 = _interopRequireDefault(_rotate);\n\nvar _translate = __webpack_require__(\"2540\");\n\nvar _translate2 = _interopRequireDefault(_translate);\n\nvar _styler = __webpack_require__(\"89e1\");\n\nvar _styler2 = _interopRequireDefault(_styler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.scale = _scale2.default;\nexports.rotate = _rotate2.default;\nexports.translate = _translate2.default;\nexports.styler = _styler2.default;\n\n/***/ }),\n\n/***/ \"9def\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(\"4588\");\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n\n/***/ \"9e1e\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(\"79e5\")(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n\n/***/ \"aa77\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(\"5ca1\");\nvar defined = __webpack_require__(\"be13\");\nvar fails = __webpack_require__(\"79e5\");\nvar spaces = __webpack_require__(\"fdef\");\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n\n\n/***/ }),\n\n/***/ \"be13\":\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"c366\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(\"6821\");\nvar toLength = __webpack_require__(\"9def\");\nvar toAbsoluteIndex = __webpack_require__(\"77f1\");\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n\n/***/ \"c5f6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar global = __webpack_require__(\"7726\");\nvar has = __webpack_require__(\"69a8\");\nvar cof = __webpack_require__(\"2d95\");\nvar inheritIfRequired = __webpack_require__(\"5dbc\");\nvar toPrimitive = __webpack_require__(\"6a99\");\nvar fails = __webpack_require__(\"79e5\");\nvar gOPN = __webpack_require__(\"9093\").f;\nvar gOPD = __webpack_require__(\"11e9\").f;\nvar dP = __webpack_require__(\"86cc\").f;\nvar $trim = __webpack_require__(\"aa77\").trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(__webpack_require__(\"2aeb\")(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = __webpack_require__(\"9e1e\") ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  __webpack_require__(\"2aba\")(global, NUMBER, $Number);\n}\n\n\n/***/ }),\n\n/***/ \"c69a\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(\"9e1e\") && !__webpack_require__(\"79e5\")(function () {\n  return Object.defineProperty(__webpack_require__(\"230e\")('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n\n/***/ \"ca5a\":\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n\n/***/ \"cb7c\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(\"d3f4\");\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"ce10\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(\"69a8\");\nvar toIObject = __webpack_require__(\"6821\");\nvar arrayIndexOf = __webpack_require__(\"c366\")(false);\nvar IE_PROTO = __webpack_require__(\"613b\")('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ }),\n\n/***/ \"d3f4\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n\n/***/ \"d8e8\":\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n\n/***/ \"e11e\":\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n\n/***/ \"fab2\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar document = __webpack_require__(\"7726\").document;\nmodule.exports = document && document.documentElement;\n\n\n/***/ }),\n\n/***/ \"fb15\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js\n// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var setPublicPath_i\n  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\\/)[^/]+\\.js$/))) {\n    __webpack_require__.p = setPublicPath_i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\n/* harmony default export */ var setPublicPath = (null);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"2867f158-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/FreeTransform.vue?vue&type=template&id=7f510dfe&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:( _obj = {}, _obj[(_vm.classPrefix + \"-transform\")] = true, _obj[(_vm.classPrefix + \"-transform--active\")] = _vm.selected, _obj ),style:(_vm.styles),on:{\"click\":_vm.click,\"dblclick\":_vm.dblClick,\"mousedown\":_vm.mousedown}},[_c('div',{class:(_vm.classPrefix + \"-transform__content\"),style:(_vm.computedStyles.element)},[_vm._t(\"default\")],2),(_vm.selected)?_c('div',{class:(_vm.classPrefix + \"-transform__controls\"),style:(_vm.computedStyles.controls)},[_c('div',{class:(_vm.classPrefix + \"-transform__rotator\"),on:{\"mousedown\":_vm.handleRotation}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--tl\")],on:{\"mousedown\":function($event){_vm.handleScale('tl',$event)}}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--ml\")],on:{\"mousedown\":function($event){_vm.handleScale('ml',$event)}}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--tr\")],on:{\"mousedown\":function($event){_vm.handleScale('tr',$event)}}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--tm\")],on:{\"mousedown\":function($event){_vm.handleScale('tm',$event)}}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--bl\")],on:{\"mousedown\":function($event){_vm.handleScale('bl',$event)}}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--bm\")],on:{\"mousedown\":function($event){_vm.handleScale('bm',$event)}}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--br\")],on:{\"mousedown\":function($event){_vm.handleScale('br',$event)}}}),_c('div',{class:[(_vm.classPrefix + \"-transform__scale-point \" + _vm.classPrefix + \"-transform__scale-point--mr\")],on:{\"mousedown\":function($event){_vm.handleScale('mr',$event)}}})]):_vm._e()])\nvar _obj;}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/components/FreeTransform.vue?vue&type=template&id=7f510dfe&\n\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/builtin/es6/defineProperty.js\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/builtin/es6/objectSpread.js\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.number.constructor.js\nvar es6_number_constructor = __webpack_require__(\"c5f6\");\n\n// EXTERNAL MODULE: ./node_modules/free-transform/lib/index.js\nvar lib = __webpack_require__(\"9cdd\");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/FreeTransform.vue?vue&type=script&lang=js&\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var FreeTransformvue_type_script_lang_js_ = ({\n  name: 'Transform',\n  props: {\n    classPrefix: {\n      type: String,\n      default: \"tr\"\n    },\n    width: {\n      type: Number,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: true\n    },\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    },\n    scaleX: {\n      type: Number,\n      required: true\n    },\n    scaleY: {\n      type: Number,\n      required: true\n    },\n    scaleLimit: {\n      type: Number,\n      default: 0.1\n    },\n    angle: {\n      type: Number,\n      required: true\n    },\n    disableScale: {\n      type: Boolean,\n      default: false\n    },\n    offsetX: {\n      type: Number,\n      required: true\n    },\n    offsetY: {\n      type: Number,\n      required: true\n    },\n    selected: {\n      type: Boolean,\n      default: true\n    },\n    styles: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    selectOn: {\n      validator: function validator(value) {\n        return ['dblclick', 'mousedown', 'click'].indexOf(value) !== -1;\n      },\n      default: 'mousedown'\n    },\n    aspectRatio: {\n      type: Boolean,\n      default: true\n    },\n    scaleFromCenter: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    computedStyles: function computedStyles() {\n      var _styler = Object(lib[\"styler\"])({\n        x: this.x,\n        y: this.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        width: this.width,\n        height: this.height,\n        angle: this.angle,\n        disableScale: this.disableScale\n      }),\n          element = _styler.element,\n          controls = _styler.controls;\n\n      return {\n        element: _objectSpread({}, element, {\n          width: element.width ? \"\".concat(element.width, \"px\") : null,\n          height: element.height ? \"\".concat(element.height, \"px\") : null\n        }),\n        controls: _objectSpread({}, controls, {\n          width: \"\".concat(controls.width, \"px\"),\n          height: \"\".concat(controls.height, \"px\")\n        })\n      };\n    }\n  },\n  methods: {\n    handleScale: function handleScale(scaleType, event) {\n      var _this = this;\n\n      event.stopPropagation();\n      event.preventDefault();\n      var drag = Object(lib[\"scale\"])(scaleType, {\n        startX: event.pageX,\n        startY: event.pageY,\n        x: this.x,\n        y: this.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        width: this.width,\n        height: this.height,\n        angle: this.angle,\n        scaleLimit: this.scaleLimit,\n        scaleFromCenter: this.scaleFromCenter && event.altKey,\n        enableScaleFromCenter: this.scaleFromCenter,\n        aspectRatio: this.aspectRatio && event.shiftKey,\n        enableAspectRatio: this.aspectRatio\n      }, function (payload) {\n        _this.$emit(\"update\", payload);\n      });\n      this.onDrag(drag);\n    },\n    handleTranslation: function handleTranslation(event) {\n      var _this2 = this;\n\n      event.stopPropagation();\n      var drag = Object(lib[\"translate\"])({\n        x: this.x,\n        y: this.y,\n        startX: event.pageX,\n        startY: event.pageY\n      }, function (payload) {\n        _this2.$emit(\"update\", payload);\n      });\n      this.onDrag(drag);\n    },\n    handleRotation: function handleRotation(event) {\n      var _this3 = this;\n\n      event.stopPropagation();\n      var drag = Object(lib[\"rotate\"])({\n        startX: event.pageX,\n        startY: event.pageY,\n        x: this.x,\n        y: this.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        width: this.width,\n        height: this.height,\n        angle: this.angle,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY\n      }, function (payload) {\n        _this3.$emit(\"update\", payload);\n      });\n      this.onDrag(drag);\n    },\n    onDrag: function onDrag(drag) {\n      var up = function up() {\n        document.removeEventListener('mousemove', drag);\n        document.removeEventListener('mouseup', up);\n      };\n\n      document.addEventListener('mousemove', drag);\n      document.addEventListener('mouseup', up);\n    },\n    mousedown: function mousedown(event) {\n      this.$emit(\"mousedown\", event);\n\n      if (this.selectOn === 'mousedown' || this.selected === true) {\n        this.$emit('onSelect');\n        this.handleTranslation(event);\n      }\n    },\n    click: function click(event) {\n      this.$emit('click', event);\n\n      if (this.selectOn === 'click') {\n        this.$emit('onSelect');\n      }\n    },\n    dblClick: function dblClick(event) {\n      this.$emit('dblclick', event);\n\n      if (this.selectOn === 'dblclick') {\n        this.$emit('onSelect');\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/components/FreeTransform.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_FreeTransformvue_type_script_lang_js_ = (FreeTransformvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n// CONCATENATED MODULE: ./src/components/FreeTransform.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = normalizeComponent(\n  components_FreeTransformvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"FreeTransform.vue\"\n/* harmony default export */ var FreeTransform = (component.exports);\n// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js\n\n\n/* harmony default export */ var entry_lib = __webpack_exports__[\"default\"] = (FreeTransform);\n\n\n\n/***/ }),\n\n/***/ \"fdef\":\n/***/ (function(module, exports) {\n\nmodule.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\n/***/ })\n\n/******/ })[\"default\"];\n//# sourceMappingURL=FreeTransform.common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-free-transform/dist/FreeTransform.common.js\n");

/***/ })

}]);